"""
Django settings for tt project.

Generated by 'django-admin startproject' using Django 2.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import sys

print('********** LOCAL SETTINGS **********')
print("Python Version:\n {}".format(sys.version))

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
environ.Env.read_env(env_file=os.path.join(BASE_DIR, '.env'))



SECRET_KEY = os.environ.get("SECRET_KEY", default='dz7b#%8^w7v1m0nxxsf15$nw_%-kkomh40&l=%&)z0ce=s2*11')

DEBUG = int(os.environ.get("DEBUG", default=False))
ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS", default="*").split(" ")

# Application definition

INSTALLED_APPS = [
    # 'jet.dashboard',
    # 'jet',

    # 'super_inlines',
    'nested_admin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'debug_toolbar',
    'rest_framework',
    'rest_framework_recursive',
    'rest_framework.authtoken',
    'rest_auth',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'rest_auth.registration',
    'corsheaders',
    'admin_ordering',
    'mptt',
    'sortedm2m',
    'django_rebel',
    'easy_thumbnails',
    'image_cropping',
    # 'import_export',
    # 'taggit',
    'apps.base',
    'apps.accounts',
    'apps.news',
    'apps.api.v1',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.common.BrokenLinkEmailsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]

CORS_ORIGIN_ALLOW_ALL = True
# CORS_ORIGIN_WHITELIST = 'http://localhost:8081'


CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]

CORS_ORIGIN_WHITELIST = [
    'http://localhost:8081',
    'http://192.168.1.100:8081',
]

ROOT_URLCONF = 'sentralnews.urls'

AUTH_USER_MODEL = "accounts.User"

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, '../templates'),
                 os.path.join(BASE_DIR, '../backend/../backend/templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'sentralnews.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    #     'OPTIONS': {
    #         'min_length': 8,
    #     }
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    # },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Istanbul'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/
STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, "static")

MEDIA_ROOT = "/media"

MEDIA_URL = "/media/"

DATA_UPLOAD_MAX_MEMORY_SIZE = None

FILE_UPLOAD_MAX_MEMORY_SIZE = 1000000000

REST_FRAMEWORK = {
    # 'UNICODE_JSON': False,
    'DEFAULT_AUTHENTICATION_CLASSES': [
        # 'rest_framework.authentication.TokenAuthentication',
        # 'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        # 'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_THROTTLE_RATES': {
        'email-trigger': '3/m'
    }
}

# https://django-allauth.readthedocs.io/en/latest/configuration.html
# This is required otherwise it asks for email server
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# ACCOUNT_USER_MODEL_USERNAME_FIELD = None
# ACCOUNT_AUTHENTICATION_METHOD = 'email'
# ACCOUNT_USERNAME_REQUIRED = False
# ACCOUNT_EMAIL_REQUIRED = True
# ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
# ACCOUNT_ADAPTER = 'apps.accounts.adapters.AccountAdapter'
# ACCOUNT_EMAIL_CONFIRMATION_HMAC = False

# OLD_PASSWORD_FIELD_ENABLED = True
# LOGOUT_ON_PASSWORD_CHANGE = True

# Following is added to enable registration with email instead of username
AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    "django.contrib.auth.backends.ModelBackend",

    # `allauth` specific authentication methods, such as login by e-mail
    # "allauth.account.auth_backends.AuthenticationBackend",
)
SITE_ID = 1

REST_AUTH_SERIALIZERS = {
    "USER_DETAILS_SERIALIZER": "apps.api.v1.apps.auth.serializers.UserDetailsSerializer"
}

REST_AUTH_REGISTER_SERIALIZERS = {
    "REGISTER_SERIALIZER": 'apps.api.v1.apps.auth.serializers.RegisterSerializer'
}


# Django Debug Toolbar Settings
def show_toolbar_callback(request):
    return request.user.is_authenticated and request.user.is_developer


DEBUG_TOOLBAR_CONFIG = {
    "SHOW_TOOLBAR_CALLBACK": show_toolbar_callback,
}

DATABASES = {
    "default": {
        "ENGINE": os.environ.get("SQL_ENGINE", "django.db.backends.sqlite3"),
        "NAME": os.environ.get("POSTGRES_DB", os.path.join(BASE_DIR, "db.sqlite3")),
        "USER": os.environ.get("POSTGRES_USER", "user"),
        "PASSWORD": os.environ.get("POSTGRES_PASSWORD", "password"),
        "HOST": os.environ.get("SQL_HOST", "localhost"),
        "PORT": os.environ.get("SQL_PORT", "5432"),
    }
}

print(DATABASES)
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, "static")

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

THUMBNAIL_DEBUG = True
from easy_thumbnails.conf import Settings as thumbnail_settings

THUMBNAIL_PROCESSORS = (
                           'image_cropping.thumbnail_processors.crop_corners',
                       ) + thumbnail_settings.THUMBNAIL_PROCESSORS

# IMAGE_CROPPING_BACKEND = 'image.cropping.backends.easy_thmubs.EasyThumbnailsBackend'
# IMAGE_CROPPING_BACKEND_PARAMS = {''version_suffix':'thumb'}

# IMAGE_CROPPING_JQUERY_URL = 'https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js'
IMAGE_CROPPING_JQUERY_URL = None

# CKEditor

CKEDITOR_JQUERY_URL = 'https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js'

CKEDITOR_UPLOAD_PATH = "medias"

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'Custom',
        'toolbar_Custom': [
            ['Format', 'RemoveFormat', 'Blockquote', 'Bold', 'Italic', 'Underline', 'Strike', 'SpellChecker', 'Undo',
             'Redo'],
            ['Link', 'Unlink'],
            ['Image', 'HorizontalRule'],
            ['JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
            ['TextColor', 'BGColor'],
            ['Source', 'Maximize', 'Preview']
        ],
        "image_previewText": " ",
        # "contentsCss": ["/static/css/post-preview.css"],
        "removePlugins": "elementspath",
        "width": "100%",
        "disallowedContent": "img[height,width]{height,width}",
        "format_tags": "p;small;h1;h2;h3;h4;h5;h6;address",
        "format_small": {"element": "small"}
    },
}

CKEDITOR_IMAGE_BACKEND = "pillow"

REBEL = {
    "TEST_MODE": False,
    "SEARCH_FIELDS": [
    ],
    "EMAIL_PROFILES": {
        'INFO': {
            'EMAIL': "SentralNews <info@sentral.news>",
            "API": {
                "API_KEY": "28e784ce69368d6a6173fc552e26b82f-7238b007-c08d6422",
                "PUBLIC_KEY": "pubkey-2b1b19fd22cc9b62bc6bb778190ae950",
                "DOMAIN": "mg.sentral.news"
            }
        }
    }
}

POPULAR_TAGS_COUNT = 10
